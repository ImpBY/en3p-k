
# ═══════════════════════════════════════════════════════════════════════════
# Moonraker Configuration for Elegoo Neptune 3 Pro
# ═══════════════════════════════════════════════════════════════════════════

[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/mcu/printer_data/comms/klippy.sock
max_upload_size: 1024  # Maximum upload size in MB

[file_manager]
enable_object_processing: True
# Queue directory for uploaded files
queue_gcode_uploads: False

[data_store]
temperature_store_size: 1200
gcode_store_size: 1000

[job_queue]
load_on_startup: False
automatic_transition: False


# ═══════════════════════════════════════════════════════════════════════════
# Authorization & Security
# ═══════════════════════════════════════════════════════════════════════════

[authorization]
# Force login for remote access (recommended for security)
force_logins: False  # Set to True for production
# API key file location
# api_key_path: /home/mcu/printer_data/moonraker.api_key

# Trusted clients (local network only)
trusted_clients:
    192.168.3.0/24    # Local subnet
    127.0.0.0/8       # Localhost
    169.254.0.0/16    # Link-local
    FE80::/10         # IPv6 link-local
    ::1/128           # IPv6 localhost

# CORS domains for web interfaces
cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz


# ═══════════════════════════════════════════════════════════════════════════
# OctoPrint Compatibility
# ═══════════════════════════════════════════════════════════════════════════

[octoprint_compat]


# ═══════════════════════════════════════════════════════════════════════════
# History & Announcements
# ═══════════════════════════════════════════════════════════════════════════

[history]

[announcements]
subscriptions:
    mainsail
    fluidd
    klipper


# ═══════════════════════════════════════════════════════════════════════════
# Update Managers
# ═══════════════════════════════════════════════════════════════════════════

[update_manager]
channel: stable  # Changed from 'dev' to 'stable'
refresh_interval: 168  # Check weekly
enable_auto_refresh: True  # Auto-check for updates
enable_system_updates: True  # Allow system package updates

# Mainsail
[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: /home/mcu/mainsail
persistent_files:
    config.json

# Fluidd
[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd
persistent_files:
    config.json

# Fluidd Config
[update_manager fluidd-config]
type: git_repo
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
primary_branch: master
managed_services: klipper
info_tags:
    desc=Fluidd Configuration Files

# Display Connector (Neptune specific)
[update_manager display]
type: git_repo
path: ~/display_connector
origin: https://github.com/OpenNeptune3D/display_connector.git
primary_branch: main
managed_services: display
is_system_service: False
info_tags:
    desc=Neptune Display Connector

# Eddy-NG (Probe firmware)
[update_manager eddy-ng]
type: git_repo
path: ~/eddy-ng
origin: https://github.com/vvuk/eddy-ng.git
primary_branch: main
is_system_service: False
info_tags:
    desc=Eddy Probe Firmware

# KIAUH (Klipper Installation And Update Helper)
[update_manager kiauh]
type: git_repo
path: ~/kiauh
origin: https://github.com/dw-0/kiauh.git
primary_branch: master
is_system_service: False
info_tags:
    desc=Klipper Installation Helper

# Crowsnest (Camera streaming)
# [update_manager crowsnest]
# type: git_repo
# path: ~/crowsnest
# origin: https://github.com/mainsail-crew/crowsnest.git
# primary_branch: master
# managed_services: crowsnest
# install_script: tools/install.sh
# info_tags:
#     desc=Camera Streaming Service

# Sonar (Keep Alive service)
# [update_manager sonar]
# type: git_repo
# path: ~/sonar
# origin: https://github.com/mainsail-crew/sonar.git
# primary_branch: main
# managed_services: sonar
# install_script: tools/install.sh
# info_tags:
#     desc=Network Keep-Alive Service

# KlipperScreen (if installed)
# [update_manager KlipperScreen]
# type: git_repo
# path: ~/KlipperScreen
# origin: https://github.com/KlipperScreen/KlipperScreen.git
# primary_branch: master
# managed_services: KlipperScreen
# virtualenv: ~/.KlipperScreen-env
# requirements: scripts/KlipperScreen-requirements.txt
# install_script: scripts/KlipperScreen-install.sh


# ═══════════════════════════════════════════════════════════════════════════
# Webcam Configuration
# ═══════════════════════════════════════════════════════════════════════════

# [webcam neptune_camera]
# location: printer
# service: mjpegstreamer
# target_fps: 15
# target_fps_idle: 5
# stream_url: /webcam/?action=stream
# snapshot_url: /webcam/?action=snapshot
# flip_horizontal: False
# flip_vertical: False
# rotation: 0


# ═══════════════════════════════════════════════════════════════════════════
# Power Control (if using smart plugs)
# ═══════════════════════════════════════════════════════════════════════════

# Example for TP-Link Kasa smart plug
# [power printer_plug]
# type: tplink_smartplug
# address: 192.168.3.100
# output_id: 0
# off_when_shutdown: True
# on_when_job_queued: True
# locked_while_printing: True
# restart_klipper_when_powered: True
# restart_delay: 2

# Example for Tasmota device
# [power printer_tasmota]
# type: tasmota
# address: 192.168.3.101
# password: admin
# output_id: 1


# ═══════════════════════════════════════════════════════════════════════════
# Notifier Configuration (optional)
# ═══════════════════════════════════════════════════════════════════════════

# Telegram notifications
# [notifier telegram]
# url: tgram://{bottoken}/{ChatID}
# events: started, complete, error, cancelled
# body: "Print {event_name}: {event_args[1].filename}"
# attach: http://localhost/webcam/?action=snapshot

# Discord notifications
# [notifier discord]
# url: discord://webhook_id/webhook_token
# events: started, complete, error, cancelled
# body: "Print {event_name}: {event_args[1].filename}"
# attach: http://localhost/webcam/?action=snapshot

# Email notifications
# [notifier email]
# url: mailto://user:password@smtp.gmail.com:587?to=recipient@email.com
# events: started, complete, error, cancelled
# body: "Print {event_name}: {event_args[1].filename}"
# attach: http://localhost/webcam/?action=snapshot


# ═══════════════════════════════════════════════════════════════════════════
# Timelapse Configuration (if using moonraker-timelapse)
# ═══════════════════════════════════════════════════════════════════════════

# [timelapse]
# output_path: /home/mcu/printer_data/timelapse/
# frame_path: /tmp/timelapse/
# ffmpeg_binary_path: /usr/bin/ffmpeg
# enabled: True
# mode: layermacro
# snapshoturl: http://localhost/webcam/?action=snapshot
# gcode_verbose: True
# parkhead: False
# parkpos: back_left
# park_custom_pos_x: 10
# park_custom_pos_y: 10
# park_custom_pos_dz: 10
# park_travel_speed: 100
# park_retract_speed: 15
# park_extrude_speed: 15
# park_retract_distance: 1.0
# park_extrude_distance: 1.0
# hyperlapse_cycle: 30
# autorender: True
# constant_rate_factor: 23
# output_framerate: 30
# pixelformat: yuv420p
# time_format_code: %Y%m%d_%H%M
