[gcode_macro M17]
description: "Enable steppers. Usage: M17 [X] [Y] [Z] [E]"
gcode:
  {% if 'X' in params or 'Y' in params or 'Z' in params or 'E' in params %}
    # Enable specific motors
    {% if 'X' in params %}
      SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    {% endif %}
    {% if 'Y' in params %}
      SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    {% endif %}
    {% if 'Z' in params %}
      SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    {% endif %}
    {% if 'E' in params %}
      SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    {% endif %}
  {% else %}
    # Enable all motors (standard M17 behavior)
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
  {% endif %}


[gcode_macro M600]
description: "Filament change. Usage: M600 [X<pos>] [Y<pos>] [Z<lift>] [E<retract>] [L<extrude>]"
gcode:
  {% set default_x = printer.toolhead.axis_maximum.x / 2 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 10 %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(10)|float %}
  {% set e = params.E|default(50)|float %}
  {% set l = params.L|default(50)|float %}

  {action_respond_info("Filament change requested")}
  {action_respond_info("Park position: X%.1f Y%.1f Z+%.1f" % (x, y, z))}

  # Store filament change parameters for RESUME
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=filament_change_retract VALUE={e}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=filament_change_extrude VALUE={l}

  # Pause with custom park position
  PAUSE X={x} Y={y} Z={z}

  # Unload filament
  {% if e > 0 %}
    {action_respond_info("Unloading %.1fmm of filament..." % e)}
    G91  # Relative positioning
    G1 E-{e} F300  # Retract filament
    G90  # Absolute positioning
  {% endif %}

  {action_respond_info("Please change filament and click RESUME")}


[gcode_macro M109]
rename_existing: M99109
description: "Set extruder temperature and wait. Usage: M109 S<temp>"
gcode:
  {% if 'S' not in params %}
    {action_respond_info("ERROR: M109 requires S parameter")}
    {action_raise_error("Missing temperature parameter")}
  {% endif %}

  {% set s = params.S|float %}

  # Set temperature
  M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

  # Wait for temperature (if not turning off)
  {% if s != 0 %}
    {action_respond_info("Heating extruder to %.0f°C..." % s)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+1}
    {action_respond_info("Extruder temperature reached!")}
  {% else %}
    {action_respond_info("Extruder heater turned off")}
  {% endif %}


[gcode_macro M190]
rename_existing: M99190
description: "Set bed temperature and wait. Usage: M190 S<temp>"
gcode:
  {% if 'S' not in params %}
    {action_respond_info("ERROR: M190 requires S parameter")}
    {action_raise_error("Missing temperature parameter")}
  {% endif %}

  {% set s = params.S|float %}

  # Set temperature
  M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

  # Wait for temperature (if not turning off)
  {% if s != 0 %}
    {action_respond_info("Heating bed to %.0f°C..." % s)}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-1} MAXIMUM={s+1}
    {action_respond_info("Bed temperature reached!")}
  {% else %}
    {action_respond_info("Bed heater turned off")}
  {% endif %}


[gcode_macro SHUTDOWN]
description: "Safely shutdown the printer and host system"
variable_confirm_shutdown: 0
gcode:
  {% if confirm_shutdown == 0 %}
    # First call - request confirmation
    {action_respond_info("═══════════════════════════════════")}
    {action_respond_info("  ⚠️  SHUTDOWN REQUESTED")}
    {action_respond_info("═══════════════════════════════════")}
    {action_respond_info("This will:")}
    {action_respond_info("  • Turn off all heaters")}
    {action_respond_info("  • Park the toolhead")}
    {action_respond_info("  • Disable motors")}
    {action_respond_info("  • Shutdown the host system")}
    {action_respond_info("")}
    {action_respond_info("Run SHUTDOWN again to confirm")}
    {action_respond_info("Or run SHUTDOWN_CANCEL to abort")}
    {action_respond_info("═══════════════════════════════════")}

    SET_GCODE_VARIABLE MACRO=SHUTDOWN VARIABLE=confirm_shutdown VALUE=1

    # Auto-cancel after 30 seconds
    UPDATE_DELAYED_GCODE ID=SHUTDOWN_TIMEOUT DURATION=30

  {% else %}
    # Second call - execute shutdown
    UPDATE_DELAYED_GCODE ID=SHUTDOWN_TIMEOUT DURATION=0  # Cancel timeout

    {action_respond_info("═══════════════════════════════════")}
    {action_respond_info("  EXECUTING SAFE SHUTDOWN")}
    {action_respond_info("═══════════════════════════════════")}

    # Turn off all heaters
    {action_respond_info("1/5: Turning off heaters...")}
    M104 S0
    M140 S0
    M107

    # Park toolhead
    {% if "xyz" in printer.toolhead.homed_axes %}
      {action_respond_info("2/5: Parking toolhead...")}
      G91
      G1 Z10 F600
      G90
      G1 X0 Y0 F6000
    {% else %}
      {action_respond_info("2/5: Skipping park (not homed)")}
    {% endif %}

    # Disable steppers
    {action_respond_info("3/5: Disabling steppers...")}
    M84

    # Wait for cooldown
    {action_respond_info("4/5: Cooling down (3 seconds)...")}
    G4 P3000

    # Shutdown
    {action_respond_info("5/5: Shutting down host...")}
    {action_respond_info("═══════════════════════════════════")}

    {action_call_remote_method("shutdown_machine")}
    {action_respond_info('action:poweroff')}
  {% endif %}


[gcode_macro SHUTDOWN_CANCEL]
description: "Cancel pending shutdown"
gcode:
  SET_GCODE_VARIABLE MACRO=SHUTDOWN VARIABLE=confirm_shutdown VALUE=0
  UPDATE_DELAYED_GCODE ID=SHUTDOWN_TIMEOUT DURATION=0
  {action_respond_info("Shutdown cancelled")}


[delayed_gcode SHUTDOWN_TIMEOUT]
gcode:
  SET_GCODE_VARIABLE MACRO=SHUTDOWN VARIABLE=confirm_shutdown VALUE=0
  {action_respond_info("Shutdown confirmation timeout - cancelled")}


[gcode_macro REBOOT]
description: "Safely reboot the host system"
gcode:
  {action_respond_info("═══════════════════════════════════")}
  {action_respond_info("  REBOOTING HOST SYSTEM")}
  {action_respond_info("═══════════════════════════════════")}

  # Turn off heaters
  M104 S0
  M140 S0
  M107

  # Park if possible
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z10 F600
    G90
    G1 X0 Y0 F6000
  {% endif %}

  # Disable motors
  M84

  {action_respond_info("Rebooting in 3 seconds...")}
  G4 P3000

  {action_call_remote_method("reboot_machine")}


[gcode_macro RESTART_KLIPPER]
description: "Restart Klipper firmware only (not host)"
gcode:
  {action_respond_info("═══════════════════════════════════")}
  {action_respond_info("  RESTARTING KLIPPER")}
  {action_respond_info("═══════════════════════════════════")}

  # Turn off heaters for safety
  M104 S0
  M140 S0

  {action_respond_info("Restarting Klipper firmware...")}
  FIRMWARE_RESTART


[gcode_macro EMERGENCY_STOP]
description: "Emergency stop - immediately disable everything"
gcode:
  {action_respond_info("🚨 EMERGENCY STOP ACTIVATED 🚨")}

  # Immediate heater shutdown
  M104 S0
  M140 S0
  M107

  # Disable all motors immediately
  M84

  # Stop all movement
  M410  # Quick stop (if supported)

  {action_respond_info("All systems disabled!")}
  {action_respond_info("Check printer before resuming")}


[gcode_macro MOTORS_OFF]
description: "Disable all stepper motors"
gcode:
  {action_respond_info("Disabling all motors...")}
  M84
  {action_respond_info("Motors disabled")}


[gcode_macro HEATERS_OFF]
description: "Turn off all heaters"
gcode:
  {action_respond_info("Turning off all heaters...")}
  M104 S0  # Extruder off
  M140 S0  # Bed off
  {action_respond_info("All heaters off")}


[gcode_macro FANS_OFF]
description: "Turn off all fans"
gcode:
  {action_respond_info("Turning off all fans...")}
  M107  # Part cooling fan off
  # Add other fans if needed:
  # SET_FAN_SPEED FAN=exhaust_fan SPEED=0
  {action_respond_info("All fans off")}


[gcode_macro ALL_OFF]
description: "Turn off heaters, fans, and motors"
gcode:
  {action_respond_info("═══════════════════════════════════")}
  {action_respond_info("  TURNING OFF ALL SYSTEMS")}
  {action_respond_info("═══════════════════════════════════")}

  HEATERS_OFF
  FANS_OFF
  MOTORS_OFF

  {action_respond_info("All systems off")}
