# ═══════════════════════════════════════════════════════════════════════════
# BTT Eddy-NG Configuration for Elegoo Neptune 3 Pro
# ═══════════════════════════════════════════════════════════════════════════
# This configuration uses Eddy-NG as:
#   - Probe for bed mesh leveling
#   - Z-axis homing endstop (via TAP)
#   - Temperature-compensated measurements
# 
# Setup guide: https://github.com/bigtreetech/eddy
# ═══════════════════════════════════════════════════════════════════════════


# ═══════════════════════════════════════════════════════════════════════════
# Eddy-NG MCU Configuration
# ═══════════════════════════════════════════════════════════════════════════

[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044506128C0751C-if00
restart_method: command
# is_non_critical: true  # Uncomment if you want printer to work without Eddy


# ═══════════════════════════════════════════════════════════════════════════
# Temperature Sensors
# ═══════════════════════════════════════════════════════════════════════════

[temperature_sensor eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 0
max_temp: 100
gcode_id: EDDY_MCU

[temperature_probe eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
min_temp: 0
max_temp: 100
gcode_id: EDDY_PROBE


# ═══════════════════════════════════════════════════════════════════════════
# Eddy-NG Probe Configuration
# ═══════════════════════════════════════════════════════════════════════════

[probe_eddy_ng eddy]
# Sensor hardware
sensor_type: ldc1612
i2c_mcu: eddy
i2c_bus: i2c0f

# Physical offsets (adjusted for Neptune 3 Pro)
x_offset: -34.25  # Distance from nozzle to probe center (X)
y_offset: 25.5    # Distance from nozzle to probe center (Y)

# Movement speeds
probe_speed: 5.0      # Speed when probing (mm/s)
lift_speed: 10.0      # Speed when lifting after probe (mm/s)
move_speed: 50.0      # Speed for XY movements (mm/s)

# Drive current settings
reg_drive_current: 15  # Normal operation current (homing, probing)
tap_drive_current: 16  # TAP operation current (higher sensitivity)

# Homing settings (when using as Z endstop)
home_trigger_height: 2.0                    # Virtual endstop trigger height
home_trigger_safe_start_offset: 1.0        # Safety offset above trigger
home_trigger_safe_time_offset: 0.100       # Time safety check (seconds)

# TAP settings (for precise Z homing)
tap_start_z: 3.0                # Start height for tap (safe for drive_current=16)
tap_target_z: -0.250            # Lowest position if tap fails
tap_mode: butter                # Filter mode: 'butter' (Butterworth) or 'wma' (Weighted Moving Average)
tap_threshold: 250.0            # Tap detection threshold (higher = less sensitive)
tap_speed: 3.0                  # Tap operation speed (mm/s)
tap_adjust_z: 0.0               # Static Z adjustment after tap
tap_samples: 3                  # Number of tap samples to take
tap_max_samples: 5              # Maximum tap attempts before failure
tap_samples_stddev: 0.020       # Maximum standard deviation between samples (mm)
tap_time_position: 0.3          # Tap position in detection range (0.0-1.0)

# Butterworth filter settings (for tap_mode: butter)
tap_butter_lowcut: 5.0          # Low-cut frequency (Hz)
tap_butter_highcut: 25.0        # High-cut frequency (Hz)
tap_butter_order: 2             # Filter order

# Calibration settings
calibration_z_max: 15.0         # Maximum height for calibration
calibration_points: 150         # Number of calibration points

# Scan settings (for rapid scanning)
scan_sample_time: 0.100         # Sample time at each probe point (seconds)
scan_sample_time_delay: 0.050   # Delay before sampling (seconds)

# Safety and debugging
max_errors: 0                   # Maximum consecutive sensor errors (0 = unlimited)
debug: false                    # Enable verbose logging (set to true for troubleshooting)
allow_unsafe: false             # Disable safety checks (DEVELOPMENT ONLY!)
write_tap_plot: false           # Write tap plot for last tap (debugging)
write_every_tap_plot: false     # Write plot for every tap (debugging)


# ═══════════════════════════════════════════════════════════════════════════
# Bed Mesh Configuration (Optimized for Eddy-NG)
# ═══════════════════════════════════════════════════════════════════════════

[bed_mesh]
# Movement settings
horizontal_move_z: 1.0          # CRITICAL: Low value for Eddy-NG (not 5!)
speed: 150                      # Probing speed (mm/s)

# Mesh boundaries (adjusted for probe offset)
mesh_min: 15, 26                # Minimum X,Y coordinates
mesh_max: 195, 215              # Maximum X,Y coordinates

# Mesh density
probe_count: 64, 64             # High-resolution mesh (64x64 = 4096 points)
algorithm: bicubic              # Interpolation algorithm

# Fade settings
fade_start: 1.0                 # Start fading mesh correction at this Z height
fade_end: 5.0                   # Complete fade at this Z height
fade_target: 0.01               # Target Z position after fade

# Zero reference
zero_reference_position: 115, 115  # Center of bed (no probe offset applied)

# Adaptive mesh
adaptive_margin: 5              # Margin around print area for adaptive mesh

# Scan settings
scan_overshoot: 8               # Overshoot distance for rapid scanning


# ═══════════════════════════════════════════════════════════════════════════
# Safe Z Home Configuration
# ═══════════════════════════════════════════════════════════════════════════

[safe_z_home]
# Home position (center of bed, adjusted for probe offset)
home_xy_position: 149.25, 89.5  # X: 115 + 34.25, Y: 115 - 25.5
# Alternative: Use bed center without offset adjustment
# home_xy_position: 115, 115

# Movement settings
speed: 100                      # XY movement speed during homing
z_hop: 10                       # Z hop height before homing
z_hop_speed: 5                  # Z hop speed

# Options
move_to_previous: False         # Don't return to previous position after homing

[force_move]
enable_force_move: True


# ═══════════════════════════════════════════════════════════════════════════
# Calibration Macros (Fixed for Eddy-NG)
# ═══════════════════════════════════════════════════════════════════════════

[gcode_macro EDDY_CALIBRATE_CURRENT]
description: "Calibrate Eddy drive current. Follow on-screen instructions."
gcode:
  {action_respond_info("=== EDDY DRIVE CURRENT CALIBRATION ===")}

  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600
  BED_MESH_CLEAR

  # Home X and Y only
  {action_respond_info("Homing X and Y axes...")}
  G28.1 X Y  # Use renamed G28 to avoid recursion

  # Move to center of bed
  G90
  {% set center_x = printer.toolhead.axis_maximum.x / 2 %}
  {% set center_y = printer.toolhead.axis_maximum.y / 2 %}
  G1 X{center_x} Y{center_y} F6000

  {% if 'z' not in printer.toolhead.homed_axes %}
    {action_respond_info("=== MANUAL CALIBRATION REQUIRED ===")}
    {action_respond_info("STEP 1: Use web interface to jog Z axis")}
    {action_respond_info("STEP 2: Lower Z until Eddy probe is ~1mm from bed")}
    {action_respond_info("STEP 3: Run command: LDC_CALIBRATE_DRIVE_CURRENT CHIP=eddy")}
    {action_respond_info("STEP 4: After calibration, run: SAVE_CONFIG")}
    {action_respond_info("===================================")}
  {% else %}
    # If Z is homed, move to safe height
    {action_respond_info("Z axis is homed. Moving to safe height...")}
    G1 Z20 F600
    {action_respond_info("=== MANUAL CALIBRATION REQUIRED ===")}
    {action_respond_info("STEP 1: Lower Z until probe is ~1mm from bed")}
    {action_respond_info("STEP 2: Run: LDC_CALIBRATE_DRIVE_CURRENT CHIP=eddy")}
    {action_respond_info("STEP 3: Run: SAVE_CONFIG")}
    {action_respond_info("===================================")}
  {% endif %}

  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}


[gcode_macro EDDY_CALIBRATE_PROBE]
description: "Calibrate Eddy probe Z offset. Requires homed Z axis."
gcode:
  {action_respond_info("Starting Eddy probe calibration...")}

  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600
  BED_MESH_CLEAR

  # Require Z to be homed first
  {% if 'z' not in printer.toolhead.homed_axes %}
    {action_respond_info("ERROR: Z axis must be homed first!")}
    {action_respond_info("Run G28 or EDDY_CALIBRATE_CURRENT first")}
    {action_raise_error("Z axis not homed")}
  {% endif %}

  # Home X and Y
  G28.1 X Y  # Use renamed G28 to avoid recursion

  # Move to center of bed
  G90
  G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F6000

  # Move to safe height first
  G1 Z10 F600

  {action_respond_info("Starting probe calibration...")}
  # Fixed: Use correct command for Eddy-NG
  PROBE_EDDY_NG_CALIBRATE CHIP=eddy

  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}


[gcode_macro EDDY_CALIBRATE_DRIFT]
description: "Calibrate Eddy temperature drift compensation. Takes ~30 minutes."
gcode:
  {action_respond_info("=== EDDY TEMPERATURE DRIFT CALIBRATION ===")}
  {action_respond_info("This process will take approximately 30 minutes")}
  {action_respond_info("The probe will heat from ambient to 56°C in 2°C steps")}
  {action_respond_info("==========================================")}

  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600
  BED_MESH_CLEAR

  # Home all axes
  {action_respond_info("Homing all axes...")}
  G28.1  # Use renamed G28 to avoid recursion

  # Optional: Heat bed and extruder for realistic conditions
  # Uncomment if you want to calibrate with heated bed/extruder
  # {action_respond_info("Heating bed to 60°C and extruder to 200°C...")}
  # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  # SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  # TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
  # TEMPERATURE_WAIT SENSOR=extruder MINIMUM=200

  # Move to center and lower to measurement height
  {% set center_x = printer.toolhead.axis_maximum.x / 2 %}
  {% set center_y = printer.toolhead.axis_maximum.y / 2 %}
  G1 X{center_x} Y{center_y} F6000
  G1 Z1 F600

  {action_respond_info("Starting temperature calibration...")}
  {action_respond_info("Current probe temp: %.1f°C" % printer['temperature_probe eddy'].temperature)}
  {action_respond_info("Target: 56°C in 2°C steps")}

  TEMPERATURE_PROBE_CALIBRATE PROBE=eddy TARGET=56 STEP=2

  {action_respond_info("==========================================")}
  {action_respond_info("Drift calibration started!")}
  {action_respond_info("Monitor progress in console")}
  {action_respond_info("==========================================")}


[gcode_macro EDDY_CALIBRATE_DRIFT_NEXT]
description: "Continue to next temperature step in drift calibration"
gcode:
  {% if printer['temperature_probe eddy'] %}
    {action_respond_info("Current probe temperature: %.1f°C" % printer['temperature_probe eddy'].temperature)}
    {action_respond_info("Continuing to next temperature step...")}
  {% endif %}

  TEMPERATURE_PROBE_NEXT

  {action_respond_info("Waiting for temperature stabilization...")}
  {action_respond_info("This may take several minutes per step")}


[gcode_macro EDDY_CALIBRATE_DRIFT_STOP]
description: "Complete and save drift calibration"
gcode:
  {action_respond_info("=== COMPLETING DRIFT CALIBRATION ===")}

  # Complete calibration
  TEMPERATURE_PROBE_COMPLETE

  {action_respond_info("Drift calibration completed!")}
  {action_respond_info("Shutting down heaters and motors...")}

  # Turn off heaters
  M140 S0  # Turn off bed heater
  M104 S0  # Turn off extruder heater

  # Turn off fan
  M107

  # Wait a moment for heaters to start cooling
  G4 P2000

  # Turn off motors
  M84

  {action_respond_info("==========================================")}
  {action_respond_info("IMPORTANT: Run SAVE_CONFIG to save calibration!")}
  {action_respond_info("After restart, your Eddy will be fully calibrated")}
  {action_respond_info("==========================================")}


# Fixed: Uncomment this if you are using Eddy-NG as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
 {% set svv = printer.save_variables.variables %}
 {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
   SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
   SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
 {% endif %}


# Fixed: Uncomment this if you are using Eddy-NG as the probe AND the homing endstop
[gcode_macro G28]
rename_existing: G28.1
gcode:
  {% set home_all = not rawparams %}
  {% set home_z = 'Z' in rawparams %}

  # Home axes
  G28.1 {rawparams}

  # If homing Z (or all), use TAP mode for precise Z homing
  {% if home_all or home_z %}
    {action_respond_info("Performing TAP homing for Z axis...")}
    # Eddy-NG uses TAP mode automatically when configured
    # No need to manually probe and set Z
    {action_respond_info("Z homing complete via TAP")}
  {% endif %}


# Fixed: Removed SET_Z_FROM_PROBE macro - not needed for Eddy-NG with TAP
# Eddy-NG handles Z homing automatically via TAP mode


# Fixed: Uncomment this if you are using Eddy-NG as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }


# Fixed: Uncomment the lines in this macro if you are using Eddy-NG as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %}
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
description: "Calibrate bed mesh. Usage: BED_MESH_CALIBRATE [ADAPTIVE=1] [PROFILE=name]"
gcode:
  {% set adaptive = params.ADAPTIVE|default(1)|int %}
  {% set method = params.METHOD|default('rapid_scan') %}

  {action_respond_info("Starting bed mesh calibration (adaptive=%s, method=%s)..." % (adaptive, method))}

  # Reduce velocity for mesh calibration
  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600

  # Home if not already homed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Homing all axes...")}
    G28
  {% else %}
    {action_respond_info("Printer already homed, skipping G28")}
  {% endif %}

  # Run mesh calibration with user parameters
  {% if adaptive == 1 %}
    {action_respond_info("Running ADAPTIVE mesh calibration...")}
    BTT_BED_MESH_CALIBRATE METHOD={method} ADAPTIVE=1 {rawparams}
  {% else %}
    {action_respond_info("Running FULL mesh calibration...")}
    BTT_BED_MESH_CALIBRATE METHOD={method} {rawparams}
  {% endif %}

  # Restore velocity limits
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}

  {action_respond_info("Bed mesh calibration complete!")}


[gcode_macro EDDY_CALIBRATE_ALL]
description: "Complete Eddy calibration sequence (interactive guide)"
gcode:
  {action_respond_info("╔════════════════════════════════════════════╗")}
  {action_respond_info("║  EDDY-NG COMPLETE CALIBRATION SEQUENCE    ║")}
  {action_respond_info("╚════════════════════════════════════════════╝")}
  {action_respond_info("")}
  {action_respond_info("This wizard will guide you through all calibration steps:")}
  {action_respond_info("  1. Drive Current Calibration (~5 minutes)")}
  {action_respond_info("  2. Z Offset Calibration (~5 minutes)")}
  {action_respond_info("  3. Temperature Drift Calibration (~30 minutes)")}
  {action_respond_info("")}
  {action_respond_info("Total time: ~40 minutes")}
  {action_respond_info("═══════════════════════════════════════════════")}
  {action_respond_info("")}

  # Check if Eddy is connected
  {% if 'eddy' not in printer %}
    {action_respond_info("ERROR: Eddy MCU not connected!")}
    {action_respond_info("Check USB connection and restart Klipper")}
    {action_raise_error("Eddy MCU not found")}
  {% endif %}

  {action_respond_info("┌─────────────────────────────────────────────┐")}
  {action_respond_info("│ STEP 1/3: DRIVE CURRENT CALIBRATION        │")}
  {action_respond_info("└─────────────────────────────────────────────┘")}
  {action_respond_info("")}

  EDDY_CALIBRATE_CURRENT

  {action_respond_info("")}
  {action_respond_info("═══════════════════════════════════════════════")}
  {action_respond_info("NEXT STEPS:")}
  {action_respond_info("  1. Complete the drive current calibration above")}
  {action_respond_info("  2. Run: SAVE_CONFIG")}
  {action_respond_info("  3. After Klipper restarts, run: EDDY_CALIBRATE_PROBE")}
  {action_respond_info("  4. Then run: SAVE_CONFIG again")}
  {action_respond_info("  5. After restart, run: EDDY_CALIBRATE_DRIFT")}
  {action_respond_info("  6. Finally run: SAVE_CONFIG one last time")}
  {action_respond_info("═══════════════════════════════════════════════")}

[gcode_macro EDDY_STATUS]
description: "Display Eddy probe status and calibration info"
gcode:
  {action_respond_info("=== EDDY PROBE STATUS ===")}

  # Check if Eddy MCU is connected
  {% if 'eddy' in printer %}
    {action_respond_info("✓ Eddy MCU: Connected")}

    # Temperature sensor status
    {% if 'temperature_sensor eddy_mcu' in printer %}
      {action_respond_info("  MCU Temperature: %.1f°C" % printer['temperature_sensor eddy_mcu'].temperature)}
    {% endif %}

    # Probe temperature
    {% if 'temperature_probe eddy' in printer %}
      {action_respond_info("  Probe Temperature: %.1f°C" % printer['temperature_probe eddy'].temperature)}
    {% endif %}

    # Probe configuration
    {% if 'probe_eddy_current eddy' in printer.configfile.settings %}
      {% set probe_cfg = printer.configfile.settings['probe_eddy_current eddy'] %}
      {action_respond_info("  X Offset: %.2fmm" % probe_cfg.x_offset)}
      {action_respond_info("  Y Offset: %.2fmm" % probe_cfg.y_offset)}
      {% if probe_cfg.z_offset %}
        {action_respond_info("  Z Offset: %.3fmm" % probe_cfg.z_offset)}
      {% else %}
        {action_respond_info("  ⚠ Z Offset: NOT CALIBRATED")}
      {% endif %}
      {action_respond_info("  Speed: %.1fmm/s" % probe_cfg.speed)}
      {action_respond_info("  Lift Speed: %.1fmm/s" % probe_cfg.lift_speed)}
    {% endif %}

    # Last probe result
    {% if printer.probe.last_z_result %}
      {action_respond_info("  Last Probe Result: %.3fmm" % printer.probe.last_z_result)}
    {% endif %}

    # Runtime Z offset
    {% if printer["gcode_macro SET_GCODE_OFFSET"] %}
      {action_respond_info("  Runtime Z Offset: %.3fmm" % printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)}
    {% endif %}

  {% else %}
    {action_respond_info("✗ Eddy MCU: NOT CONNECTED")}
    {action_respond_info("  Check USB connection and serial port")}
  {% endif %}

  {action_respond_info("=========================")}

[gcode_macro EDDY_TEST_PROBE]
description: "Quick test of Eddy probe functionality"
gcode:
  {action_respond_info("=== EDDY PROBE TEST ===")}

  # Check if probe is configured
  {% if 'probe_eddy_current eddy' not in printer.configfile.settings %}
    {action_respond_info("ERROR: Eddy probe not configured!")}
    {action_raise_error("Eddy probe not found in configuration")}
  {% endif %}

  # Check Z offset calibration
  {% set probe_cfg = printer.configfile.settings['probe_eddy_current eddy'] %}
  {% if not probe_cfg.z_offset %}
    {action_respond_info("WARNING: Z offset not calibrated!")}
    {action_respond_info("Run EDDY_CALIBRATE_PROBE first")}
  {% endif %}

  # Home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Homing all axes...")}
    G28
  {% endif %}

  # Move to center
  {% set center_x = printer.toolhead.axis_maximum.x / 2 %}
  {% set center_y = printer.toolhead.axis_maximum.y / 2 %}

  {action_respond_info("Moving to bed center...")}
  G90
  G1 X{center_x} Y{center_y} Z10 F6000

  # Perform test probes
  {action_respond_info("Performing 5 test probes...")}

  PROBE_ACCURACY SAMPLES=5

  {action_respond_info("=== TEST COMPLETE ===")}
  {action_respond_info("Check probe accuracy results above")}
  {action_respond_info("Standard deviation should be < 0.010mm")}
  {action_respond_info("======================")}

