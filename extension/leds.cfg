# This is put on the FAN3 pin.
# ═══════════════════════════════════════════════════════════════════════════
# LED Configuration - Top LEDs on FAN3 pin (PB9)
# ═══════════════════════════════════════════════════════════════════════════

[led top_LEDs]
white_pin: PB9
cycle_time: 0.001
hardware_pwm: True
initial_WHITE: 0.05  # Start at 5% brightness

# Alternative configuration for Sonic Pad (if needed):
# Uncomment this and comment out [led top_LEDs] above
#[output_pin top_LEDs]
#pin: PB9
#cycle_time: 0.001
#pwm: True
#value: 0.05


# ═══════════════════════════════════════════════════════════════════════════
# LED Control Macros
# ═══════════════════════════════════════════════════════════════════════════

[gcode_macro LED_ON]
description: "Turn LEDs on at full brightness"
gcode:
  SET_LED LED=top_LEDs WHITE=1.0 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: ON (100%)")}


[gcode_macro LED_OFF]
description: "Turn LEDs off"
gcode:
  SET_LED LED=top_LEDs WHITE=0 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: OFF")}


[gcode_macro LED_SET]
description: "Set LED brightness. Usage: LED_SET BRIGHTNESS=<0.0-1.0>"
gcode:
  {% set brightness = params.BRIGHTNESS|default(0.5)|float %}

  # Clamp brightness between 0 and 1
  {% if brightness < 0 %}
    {% set brightness = 0 %}
  {% elif brightness > 1 %}
    {% set brightness = 1 %}
  {% endif %}

  SET_LED LED=top_LEDs WHITE={brightness} SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: %.0f%%" % (brightness * 100))}


[gcode_macro LED_DIM]
description: "Set LEDs to dim (25% brightness)"
gcode:
  SET_LED LED=top_LEDs WHITE=0.25 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: DIM (25%)")}


[gcode_macro LED_MEDIUM]
description: "Set LEDs to medium (50% brightness)"
gcode:
  SET_LED LED=top_LEDs WHITE=0.5 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: MEDIUM (50%)")}


[gcode_macro LED_BRIGHT]
description: "Set LEDs to bright (75% brightness)"
gcode:
  SET_LED LED=top_LEDs WHITE=0.75 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: BRIGHT (75%)")}


[gcode_macro LED_TOGGLE]
description: "Toggle LEDs on/off"
variable_led_state: 1  # 1 = on, 0 = off
gcode:
  {% if led_state == 1 %}
    LED_OFF
    SET_GCODE_VARIABLE MACRO=LED_TOGGLE VARIABLE=led_state VALUE=0
  {% else %}
    LED_ON
    SET_GCODE_VARIABLE MACRO=LED_TOGGLE VARIABLE=led_state VALUE=1
  {% endif %}


[gcode_macro LED_FADE_IN]
description: "Fade LEDs in over 2 seconds"
gcode:
  {action_respond_info("Fading LEDs in...")}
  SET_LED LED=top_LEDs WHITE=0.0 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.2 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.4 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.6 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.8 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=1.0 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: ON (100%)")}


[gcode_macro LED_FADE_OUT]
description: "Fade LEDs out over 2 seconds"
gcode:
  {action_respond_info("Fading LEDs out...")}
  SET_LED LED=top_LEDs WHITE=1.0 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.8 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.6 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.4 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.2 SYNC=1 TRANSMIT=1
  G4 P200
  SET_LED LED=top_LEDs WHITE=0.0 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs: OFF")}


[gcode_macro LED_BLINK]
description: "Blink LEDs. Usage: LED_BLINK [COUNT=3] [SPEED=500]"
gcode:
  {% set count = params.COUNT|default(3)|int %}
  {% set speed = params.SPEED|default(500)|int %}

  {action_respond_info("Blinking LEDs %d times..." % count)}

  {% for i in range(count) %}
    SET_LED LED=top_LEDs WHITE=1.0 SYNC=1 TRANSMIT=1
    G4 P{speed}
    SET_LED LED=top_LEDs WHITE=0.0 SYNC=1 TRANSMIT=1
    G4 P{speed}
  {% endfor %}

  # Restore to dim state
  SET_LED LED=top_LEDs WHITE=0.05 SYNC=1 TRANSMIT=1


[gcode_macro LED_PULSE]
description: "Pulse LEDs continuously. Use LED_PULSE_STOP to stop."
variable_pulsing: 0
variable_pulse_step: 0
gcode:
  SET_GCODE_VARIABLE MACRO=LED_PULSE VARIABLE=pulsing VALUE=1
  SET_GCODE_VARIABLE MACRO=LED_PULSE VARIABLE=pulse_step VALUE=0
  UPDATE_DELAYED_GCODE ID=LED_PULSE_LOOP DURATION=0.1
  {action_respond_info("LED pulsing started. Run LED_PULSE_STOP to stop.")}


[gcode_macro LED_PULSE_STOP]
description: "Stop LED pulsing"
gcode:
  SET_GCODE_VARIABLE MACRO=LED_PULSE VARIABLE=pulsing VALUE=0
  UPDATE_DELAYED_GCODE ID=LED_PULSE_LOOP DURATION=0
  SET_LED LED=top_LEDs WHITE=0.05 SYNC=1 TRANSMIT=1
  {action_respond_info("LED pulsing stopped")}


[delayed_gcode LED_PULSE_LOOP]
gcode:
  {% if printer["gcode_macro LED_PULSE"].pulsing == 1 %}
    # Use step counter to create smooth pulsing effect
    {% set step = printer["gcode_macro LED_PULSE"].pulse_step %}
    {% set next_step = (step + 1) % 100 %}  # 100 steps for smoother cycle

    # Approximate sine wave using polynomial (better smoothness)
    {% set x = (step / 100.0) * 6.28318 %}  # Convert to radians (0 to 2*PI)
    {% set x2 = x * x %}
    {% set x3 = x2 * x %}
    {% set x5 = x3 * x2 %}

    # Taylor series approximation of sin(x): x - x^3/6 + x^5/120
    {% set sine_approx = x - (x3 / 6.0) + (x5 / 120.0) %}

    # Normalize to 0-1 range
    {% set brightness = (sine_approx + 1.0) / 2.0 %}

    # Clamp and scale
    {% if brightness < 0 %}
      {% set brightness = 0 %}
    {% elif brightness > 1 %}
      {% set brightness = 1 %}
    {% endif %}

    {% set brightness = 0.1 + (brightness * 0.9) %}

    SET_LED LED=top_LEDs WHITE={brightness} SYNC=1 TRANSMIT=1
    SET_GCODE_VARIABLE MACRO=LED_PULSE VARIABLE=pulse_step VALUE={next_step}
    UPDATE_DELAYED_GCODE ID=LED_PULSE_LOOP DURATION=0.05
  {% endif %}


# ═══════════════════════════════════════════════════════════════════════════
# Startup Configuration
# ═══════════════════════════════════════════════════════════════════════════

[delayed_gcode light_on_at_startup]
initial_duration: 0.5
gcode:
  SET_LED LED=top_LEDs WHITE=0.05 SYNC=1 TRANSMIT=1
  {action_respond_info("LEDs initialized at 5% brightness")}