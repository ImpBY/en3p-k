###############################################################################################################################################################################
# Manual Leveling
###############################################################################################################################################################################
# ═══════════════════════════════════════════════════════════════════════════
# Manual Bed Leveling Configuration
# ═══════════════════════════════════════════════════════════════════════════
#
# Neptune 3 Pro bed screw positions:
# - Bed size: 225x225mm (printable area)
# - Physical bed: ~235x235mm
# - 4 screws in corners
#
# Probe offset (from eddy.cfg):
# - X offset: -28.5mm (probe is 28.5mm left of nozzle)
# - Y offset: +22mm (probe is 22mm behind nozzle)
#
# Coordinate calculation:
# - Physical screw position + probe offset = probe target position
# - Example: Front-left screw at (40.75, -12.5)
#   → Probe target: 40.75 + (-28.5) = 12.25, -12.5 + 22 = 9.5
#
# ═══════════════════════════════════════════════════════════════════════════

[screws_tilt_adjust]
# Screw positions (where probe should move to measure)
screw1: 89.25, 149.5
screw1_name: rear_left

screw2: 209.25, 149.5
screw2_name: rear_right

screw3: 209.25, 29.5
screw3_name: front_right

screw4: 89.25, 29.5
screw4_name: front_left

# Movement settings
speed: 120
horizontal_move_z: 10
screw_thread: CW-M4  # Clockwise M4 thread


# ═══════════════════════════════════════════════════════════════════════════
# Manual Leveling Macros
# ═══════════════════════════════════════════════════════════════════════════

[gcode_macro LEVEL_BED_SCREWS]
description: "Assisted manual bed leveling with probe measurements"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  MANUAL BED LEVELING ASSISTANT")}
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("")}
  {action_respond_info("This will measure bed tilt at each screw")}
  {action_respond_info("and tell you how much to adjust each screw")}
  {action_respond_info("")}
  {action_respond_info("Instructions:")}
  {action_respond_info("  • CW = Clockwise (tighten/lower)")}
  {action_respond_info("  • CCW = Counter-clockwise (loosen/raise)")}
  {action_respond_info("  • 1 full turn = 0.7mm adjustment")}
  {action_respond_info("  • 00:15 = 15 minutes on clock = 1/4 turn")}
  {action_respond_info("")}
  {action_respond_info("═══════════════════════════════════════════")}

  # Check if homed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Homing all axes...")}
    G28
  {% endif %}

  # Run screw tilt calculation
  {action_respond_info("Measuring bed tilt...")}
  SCREWS_TILT_CALCULATE

  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("Adjustment complete!")}
  {action_respond_info("If adjustments were large, run again to verify")}
  {action_respond_info("Target: All screws within ±0.05mm")}
  {action_respond_info("═══════════════════════════════════════════")}


[gcode_macro LEVEL_BED_SCREWS_LOOP]
description: "Repeatedly level bed screws until within tolerance"
gcode:
  {% set max_iterations = params.ITERATIONS|default(5)|int %}
  {% set tolerance = params.TOLERANCE|default(0.05)|float %}

  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  ITERATIVE BED LEVELING")}
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("Max iterations: %d" % max_iterations)}
  {action_respond_info("Target tolerance: ±%.3fmm" % tolerance)}
  {action_respond_info("═══════════════════════════════════════════")}

  # Home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

  # Loop until within tolerance or max iterations
  {% for i in range(max_iterations) %}
    {action_respond_info("")}
    {action_respond_info("Iteration %d/%d:" % (i+1, max_iterations))}

    SCREWS_TILT_CALCULATE

    # Note: Klipper doesn't expose screw adjustment values to macros
    # User must manually check if adjustments are within tolerance

    {% if i < max_iterations - 1 %}
      {action_respond_info("")}
      {action_respond_info("Make adjustments and press RESUME to continue")}
      {action_respond_info("Or press CANCEL if bed is level")}
      PAUSE
    {% endif %}
  {% endfor %}

  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("Leveling sequence complete!")}
  {action_respond_info("═══════════════════════════════════════════")}


[gcode_macro BED_SCREWS_MANUAL]
description: "Manual bed leveling with paper test (no probe)"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  MANUAL BED LEVELING (PAPER TEST)")}
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("")}
  {action_respond_info("Instructions:")}
  {action_respond_info("  1. Place paper under nozzle")}
  {action_respond_info("  2. Adjust screw until paper has slight drag")}
  {action_respond_info("  3. Press ACCEPT to move to next screw")}
  {action_respond_info("  4. Repeat for all screws")}
  {action_respond_info("")}
  {action_respond_info("═══════════════════════════════════════════")}

  # Home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

  # Start bed screws adjust
  BED_SCREWS_ADJUST


[gcode_macro VERIFY_BED_LEVEL]
description: "Verify bed level by probing multiple points"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  BED LEVEL VERIFICATION")}
  {action_respond_info("═══════════════════════════════════════════")}

  # Home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

  # Probe at screw positions
  {action_respond_info("Probing at screw positions...")}
  SCREWS_TILT_CALCULATE

  {action_respond_info("")}
  {action_respond_info("Verification complete!")}
  {action_respond_info("Check results above")}
  {action_respond_info("═══════════════════════════════════════════")}


[gcode_macro LEVEL_CORNERS]
description: "Move to each corner for manual leveling"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  CORNER LEVELING ASSISTANT")}
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("")}
  {action_respond_info("Moving to each corner...")}
  {action_respond_info("Use paper test at each position")}
  {action_respond_info("")}

  # Home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

  # Define corner positions (nozzle positions, not probe)
  {% set corners = [
      {'name': 'Front Left', 'x': 40.75, 'y': -12.5},
      {'name': 'Front Right', 'x': 200.75, 'y': -12.5},
      {'name': 'Rear Right', 'x': 200.75, 'y': 147.5},
      {'name': 'Rear Left', 'x': 40.75, 'y': 147.5}
  ] %}

  {% for corner in corners %}
      {action_respond_info("Moving to %s corner..." % corner.name)}
      G90
      G1 Z10 F600
      G1 X{corner.x} Y{corner.y} F6000
      G1 Z0.1 F300

      {action_respond_info("At %s corner (X%.1f Y%.1f)" % (corner.name, corner.x, corner.y))}
      {action_respond_info("Adjust screw, then press RESUME")}
      PAUSE
  {% endfor %}

  # Return to center
  G1 Z10 F600
  G1 X112.5 Y112.5 F6000

  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("Corner leveling complete!")}
  {action_respond_info("Run LEVEL_BED_SCREWS to verify with probe")}
  {action_respond_info("═══════════════════════════════════════════")}
