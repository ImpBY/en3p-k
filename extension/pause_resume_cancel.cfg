######################################################################################################################################################
# Pause
######################################################################################################################################################
[gcode_macro PAUSE]
description: Pause running print
rename_existing: PAUSE_BASE
gcode:
  # Set park position
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10 %}

  # Calculate safe lift position 
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set current_z = printer.toolhead.position.z|float %}
  {% if current_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - current_z %}
  {% endif %}

  # Define variables 
  {% set position_x = printer.toolhead.position.x|float %}
  {% set position_y = printer.toolhead.position.y|float %}
  {% set position_z = printer.toolhead.position.z|float %}
  {% set extruder_temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0|float %}

  # Save current position and temperature
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_x VALUE="{position_x}"
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_y VALUE="{position_y}"
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_z VALUE={position_z}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_extruder_temp VALUE={extruder_temp}

  PAUSE_BASE
  G91

  # Retract filament if extruder is hot enough
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-2 F2100
  {% else %}
    {action_respond_info("Extruder not hot enough for retraction")}
  {% endif %}

  # Keep temperature above minimum extrusion temp
  {% set min_temp = printer.configfile.settings.extruder.min_extrude_temp|float %}
  {% set standby_temp = [extruder_temp - 30, min_temp + 10]|max %}
  M104 S{standby_temp}

  {action_respond_info("Extruder temperature reduced to %.0f°C" % standby_temp)}

  # Move to park position if homed
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F1200
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed - cannot park")}
  {% endif %} 


######################################################################################################################################################
# Resume
######################################################################################################################################################
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_saved_extruder_temp: 0
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0
variable_saved_e: 0.0
variable_filament_change_retract: 0
variable_filament_change_extrude: 0
gcode:
  {% if saved_extruder_temp == 0 %}
    {action_respond_info("ERROR: No saved state found. Cannot resume.")}
    {action_raise_error("No pause state to resume from")}
  {% endif %}

  # Get VELOCITY parameter if specified 
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {% else %}
    {% set get_params = "" %}
  {% endif %}

  {action_respond_info("Resuming print...")}

  # Heat extruder to target temperature
  {action_respond_info("Heating extruder to %.0f°C..." % saved_extruder_temp)}
  M109 S{saved_extruder_temp}

  # Prime filament
  G91
  G1 E2.5 F2100
  G4 P1000

  # If this was a filament change (M600), load new filament
  {% if filament_change_extrude > 0 %}
    {action_respond_info("Loading %.1fmm of new filament..." % filament_change_extrude)}
    G91
    G1 E{filament_change_extrude} F300
    G90

    # Reset variables
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=filament_change_retract VALUE=0
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=filament_change_extrude VALUE=0
  {% endif %}

  # Go back to last position 
  G90
  G0 X{saved_x} Y{saved_y} F6000
  G0 Z{saved_z} F1200

  {action_respond_info("Resuming print at X:%.2f Y:%.2f Z:%.2f" % (saved_x, saved_y, saved_z))}

  RESUME_BASE {get_params}


######################################################################################################################################################
# Cancel
######################################################################################################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {action_respond_info("Cancelling print...")}
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
  CLEAR_PAUSE
  # SDCARD_RESET_FILE
  END_PRINT
  CANCEL_PRINT_BASE
