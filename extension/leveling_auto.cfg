###############################################################################################################################################################################
# Auto Leveling
###############################################################################################################################################################################

# ═══════════════════════════════════════════════════════════════════════════
# Auto Leveling Configuration
# ═══════════════════════════════════════════════════════════════════════════

[gcode_macro M420]
description: "Load bed mesh. Usage: M420 S1 (load) or M420 S0 (clear)"
gcode:
  {% set s = params.S|default(1)|int %}

  {% if s == 1 %}
    # Load mesh
    {% if printer.bed_mesh.profiles.default %}
      BED_MESH_PROFILE LOAD=default
      {action_respond_info("Bed mesh 'default' loaded")}
    {% else %}
      {action_respond_info("WARNING: No 'default' mesh profile found!")}
      {action_respond_info("Run BED_LEVELING to create one")}
    {% endif %}
  {% else %}
    # Clear mesh
    BED_MESH_CLEAR
    {action_respond_info("Bed mesh cleared")}
  {% endif %}


[gcode_macro BED_LEVELING]
description: "Full bed leveling sequence. Usage: BED_LEVELING [EXTRUDER=200] [BED=60] [SAVE=1]"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  BED LEVELING SEQUENCE")}
  {action_respond_info("═══════════════════════════════════════════")}

  # Parameters
  {% set EXTRUDER_TEMP = params.EXTRUDER|default(200)|float %}
  {% set BED_TEMP = params.BED|default(60)|float %}
  {% set SAVE = params.SAVE|default(1)|int %}

  # Validate temperatures
  {% if EXTRUDER_TEMP < 170 %}
    {action_respond_info("WARNING: Extruder temp %.0f°C is very low!" % EXTRUDER_TEMP)}
    {action_respond_info("Recommended: 200°C for PLA, 230°C for PETG")}
  {% endif %}

  # Park position
  {% set x_park = printer.toolhead.axis_minimum.x|float %}
  {% set y_park = (printer.toolhead.axis_maximum.y - printer.toolhead.axis_minimum.y) / 2|float %}
  {% set z_park = 20|float %}

  # Step 1: Start heating
  {action_respond_info("Step 1/7: Starting heaters...")}
  {action_respond_info("  Extruder: %.0f°C" % EXTRUDER_TEMP)}
  {action_respond_info("  Bed: %.0f°C" % BED_TEMP)}
  M104 S{EXTRUDER_TEMP}  # Start heating extruder (don't wait)
  M140 S{BED_TEMP}       # Start heating bed (don't wait)

  # Step 2: Home while heating
  {action_respond_info("Step 2/7: Homing axes...")}
  G28

  # Step 3: Wait for temperatures
  {action_respond_info("Step 3/7: Waiting for temperatures...")}
  M109 S{EXTRUDER_TEMP}  # Wait for extruder
  M190 S{BED_TEMP}       # Wait for bed

  # Step 4: Heat soak (optional but recommended)
  {action_respond_info("Step 4/7: Heat soaking (30 seconds)...")}
  G4 P30000  # Wait 30 seconds for thermal expansion

  # Step 5: Clean nozzle
  {action_respond_info("Step 5/7: Purging nozzle...")}
  G90
  G1 X{x_park} Y{y_park} Z5 F6000
  G91
  G1 E10 F300  # Extrude 10mm
  G1 E-2 F1800  # Retract 2mm
  G90
  G4 P2000  # Wait for ooze

  # Optional: Move to brush if available
  {% if printer["gcode_macro CLEAN_NOZZLE"] %}
    {action_respond_info("Cleaning nozzle with brush...")}
    CLEAN_NOZZLE
  {% endif %}

  # Step 6: Calibrate mesh
  {action_respond_info("Step 6/7: Calibrating bed mesh...")}
  {action_respond_info("This will take 2-5 minutes depending on resolution")}

  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600
  BED_MESH_CLEAR

  # Use adaptive mesh if Eddy is configured
  {% if 'probe_eddy_current eddy' in printer.configfile.settings %}
    BED_MESH_CALIBRATE METHOD=rapid_scan ADAPTIVE=0 PROFILE=default
  {% else %}
    BED_MESH_CALIBRATE PROFILE=default
  {% endif %}

  # Restore velocity limits
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}

  # Step 7: Park and finish
  {action_respond_info("Step 7/7: Parking toolhead...")}
  G1 X{x_park} Y{y_park} Z{z_park} F6000

  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("Bed leveling complete!")}

  # Save or prompt
  {% if SAVE == 1 %}
    {action_respond_info("Saving configuration and restarting...")}
    {action_respond_info("Klipper will restart in 3 seconds")}
    G4 P3000
    SAVE_CONFIG
  {% else %}
    {action_respond_info("═══════════════════════════════════════════")}
    {action_respond_info("IMPORTANT: Mesh is loaded but NOT saved!")}
    {action_respond_info("To save permanently, run: SAVE_CONFIG")}
    {action_respond_info("To discard, restart Klipper without saving")}
    {action_respond_info("═══════════════════════════════════════════")}
  {% endif %}


[gcode_macro BED_LEVELING_QUICK]
description: "Quick bed leveling without heating (for testing)"
gcode:
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("  QUICK BED LEVELING (NO HEATING)")}
  {action_respond_info("═══════════════════════════════════════════")}
  {action_respond_info("WARNING: This is for testing only!")}
  {action_respond_info("For accurate results, use BED_LEVELING with heating")}
  {action_respond_info("═══════════════════════════════════════════")}

  # Home
  G28

  # Calibrate
  SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=600
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE PROFILE=default
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}

  {action_respond_info("Quick leveling complete")}
  {action_respond_info("Run SAVE_CONFIG to save, or discard by restarting")}


[gcode_macro LOAD_MESH]
description: "Load the default bed mesh profile"
gcode:
  {% if printer.bed_mesh.profiles.default %}
    BED_MESH_PROFILE LOAD=default
    {action_respond_info("Bed mesh 'default' loaded successfully")}

    # Show mesh info
    {% set mesh = printer.bed_mesh %}
    {action_respond_info("Mesh info:")}
    {action_respond_info("  Min: %.3fmm" % mesh.mesh_min[2])}
    {action_respond_info("  Max: %.3fmm" % mesh.mesh_max[2])}
    {action_respond_info("  Range: %.3fmm" % (mesh.mesh_max[2] - mesh.mesh_min[2]))}
  {% else %}
    {action_respond_info("ERROR: No 'default' mesh profile found!")}
    {action_respond_info("Available profiles:")}
    {% for profile in printer.bed_mesh.profiles %}
      {action_respond_info("  - %s" % profile)}
    {% endfor %}
    {% if printer.bed_mesh.profiles|length == 0 %}
      {action_respond_info("  (none)")}
      {action_respond_info("Run BED_LEVELING to create a mesh")}
    {% endif %}
  {% endif %}


[gcode_macro CLEAR_MESH]
description: "Clear the current bed mesh"
gcode:
  BED_MESH_CLEAR
  {action_respond_info("Bed mesh cleared")}


[gcode_macro MESH_INFO]
description: "Display current mesh information"
gcode:
  {% set mesh = printer.bed_mesh %}
  {action_respond_info("Current mesh:")}
  {action_respond_info("  Min: %.3fmm" % mesh.mesh_min[2])}
  {action_respond_info("  Max: %.3fmm" % mesh.mesh_max[2])}
  {action_respond_info("  Range: %.3fmm" % (mesh.mesh_max[2] - mesh.mesh_min[2]))}
  {action_respond_info("  Size: %dx%d points" % (mesh.mesh_x_count, mesh.mesh_y_count))}
  {action_respond_info("  Average: %.3fmm" % mesh.average)}
  {action_respond_info("  Std Dev: %.3fmm" % mesh.std_dev)}
